defmodule JumpExercise.Repo.Migrations.CreatePostgresTables do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:gmail_emails, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :thread_id, :text
      add :from, :text
      add :to, :text
      add :subject, :text
      add :body, :text
      add :labels, {:array, :text}, default: []
      add :snippet, :text
      add :raw, :text

      add :user_id,
          references(:users,
            column: :id,
            name: "gmail_emails_user_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false
    end

    create table(:gmail_clients, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :last_fetched_history_id, :text

      add :user_id,
          references(:users,
            column: :id,
            name: "gmail_clients_user_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false
    end
  end

  def down do
    drop constraint(:gmail_clients, "gmail_clients_user_id_fkey")

    drop table(:gmail_clients)

    drop constraint(:gmail_emails, "gmail_emails_user_id_fkey")

    drop table(:gmail_emails)
  end
end
